// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: server/protoLib/full.proto

package rpcproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Acid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acid string `protobuf:"bytes,1,opt,name=acid,proto3" json:"acid,omitempty"`
}

func (x *Acid) Reset() {
	*x = Acid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acid) ProtoMessage() {}

func (x *Acid) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acid.ProtoReflect.Descriptor instead.
func (*Acid) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{0}
}

func (x *Acid) GetAcid() string {
	if x != nil {
		return x.Acid
	}
	return ""
}

type DougaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentVideoID              int32                       `protobuf:"varint,1,opt,name=currentVideoID,proto3" json:"currentVideoID,omitempty"`
	Pctr                        float64                     `protobuf:"fixed64,2,opt,name=pctr,proto3" json:"pctr,omitempty"`
	CommentCountRealValue       int32                       `protobuf:"varint,3,opt,name=commentCountRealValue,proto3" json:"commentCountRealValue,omitempty"`
	GroupID                     string                      `protobuf:"bytes,4,opt,name=groupID,proto3" json:"groupID,omitempty"`
	BananaCountShow             string                      `protobuf:"bytes,5,opt,name=bananaCountShow,proto3" json:"bananaCountShow,omitempty"`
	StowCountShow               string                      `protobuf:"bytes,6,opt,name=stowCountShow,proto3" json:"stowCountShow,omitempty"`
	GiftPeachCountShow          string                      `protobuf:"bytes,7,opt,name=giftPeachCountShow,proto3" json:"giftPeachCountShow,omitempty"`
	StowCount                   int32                       `protobuf:"varint,8,opt,name=stowCount,proto3" json:"stowCount,omitempty"`
	Channel                     *DougaInfo_Channel          `protobuf:"bytes,9,opt,name=channel,proto3" json:"channel,omitempty"`
	LikeCount                   int32                       `protobuf:"varint,10,opt,name=likeCount,proto3" json:"likeCount,omitempty"`
	HasHotComment               bool                        `protobuf:"varint,11,opt,name=hasHotComment,proto3" json:"hasHotComment,omitempty"`
	ShareCountShow              string                      `protobuf:"bytes,12,opt,name=shareCountShow,proto3" json:"shareCountShow,omitempty"`
	IsDislike                   bool                        `protobuf:"varint,13,opt,name=isDislike,proto3" json:"isDislike,omitempty"`
	ShareCount                  int32                       `protobuf:"varint,14,opt,name=shareCount,proto3" json:"shareCount,omitempty"`
	PicShareURL                 string                      `protobuf:"bytes,15,opt,name=PicShareURL,proto3" json:"PicShareURL,omitempty"`
	DanmakuCount                int32                       `protobuf:"varint,16,opt,name=danmakuCount,proto3" json:"danmakuCount,omitempty"`
	CurrentVideoInfo            *DougaInfo_Currentvideoinfo `protobuf:"bytes,17,opt,name=currentVideoInfo,proto3" json:"currentVideoInfo,omitempty"`
	ViewCountShow               string                      `protobuf:"bytes,18,opt,name=viewCountShow,proto3" json:"viewCountShow,omitempty"`
	DougaID                     string                      `protobuf:"bytes,19,opt,name=dougaID,proto3" json:"dougaID,omitempty"`
	CommentCountTenThousandShow string                      `protobuf:"bytes,20,opt,name=commentCountTenThousandShow,proto3" json:"commentCountTenThousandShow,omitempty"`
	CoverImgInfo                *DougaInfo_Coverimginfo     `protobuf:"bytes,21,opt,name=coverImgInfo,proto3" json:"coverImgInfo,omitempty"`
	CommentCount                int32                       `protobuf:"varint,22,opt,name=commentCount,proto3" json:"commentCount,omitempty"`
	CoverURL                    string                      `protobuf:"bytes,23,opt,name=coverURL,proto3" json:"coverURL,omitempty"`
	DisableEdit                 bool                        `protobuf:"varint,24,opt,name=disableEdit,proto3" json:"disableEdit,omitempty"`
	CreateTimeMillis            uint64                      `protobuf:"varint,25,opt,name=createTimeMillis,proto3" json:"createTimeMillis,omitempty"`
	SuperUbb                    bool                        `protobuf:"varint,26,opt,name=superUbb,proto3" json:"superUbb,omitempty"`
	ShareURL                    string                      `protobuf:"bytes,27,opt,name=shareURL,proto3" json:"shareURL,omitempty"`
	Status                      int32                       `protobuf:"varint,28,opt,name=status,proto3" json:"status,omitempty"`
	IsFavorite                  bool                        `protobuf:"varint,29,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	IsLike                      bool                        `protobuf:"varint,30,opt,name=isLike,proto3" json:"isLike,omitempty"`
	RecoReason                  *DougaInfo_Recoreason       `protobuf:"bytes,31,opt,name=recoReason,proto3" json:"recoReason,omitempty"`
	Description                 string                      `protobuf:"bytes,32,opt,name=description,proto3" json:"description,omitempty"`
	Title                       string                      `protobuf:"bytes,33,opt,name=title,proto3" json:"title,omitempty"`
	BelongToSpecifyArubamu      bool                        `protobuf:"varint,34,opt,name=belongToSpecifyArubamu,proto3" json:"belongToSpecifyArubamu,omitempty"`
	Result                      int32                       `protobuf:"varint,35,opt,name=result,proto3" json:"result,omitempty"`
	OriginalDeclare             int32                       `protobuf:"varint,36,opt,name=originalDeclare,proto3" json:"originalDeclare,omitempty"`
	VideoList                   []*DougaInfo_Videolist      `protobuf:"bytes,37,rep,name=videoList,proto3" json:"videoList,omitempty"`
	IsThrowBanana               bool                        `protobuf:"varint,38,opt,name=isThrowBanana,proto3" json:"isThrowBanana,omitempty"`
	ViewCount                   int32                       `protobuf:"varint,39,opt,name=viewCount,proto3" json:"viewCount,omitempty"`
	BananaCount                 int32                       `protobuf:"varint,40,opt,name=bananaCount,proto3" json:"bananaCount,omitempty"`
	LikeCountShow               string                      `protobuf:"bytes,41,opt,name=likeCountShow,proto3" json:"likeCountShow,omitempty"`
	CoverCdnUrls                []*DougaInfo_Covercdnurls   `protobuf:"bytes,42,rep,name=coverCdnUrls,proto3" json:"coverCdnUrls,omitempty"`
	GiftPeachCount              int32                       `protobuf:"varint,43,opt,name=giftPeachCount,proto3" json:"giftPeachCount,omitempty"`
	IsRewardSupportted          bool                        `protobuf:"varint,44,opt,name=isRewardSupportted,proto3" json:"isRewardSupportted,omitempty"`
	CommentCountShow            string                      `protobuf:"bytes,45,opt,name=commentCountShow,proto3" json:"commentCountShow,omitempty"`
	DurationMillis              int32                       `protobuf:"varint,46,opt,name=durationMillis,proto3" json:"durationMillis,omitempty"`
	Priority                    int32                       `protobuf:"varint,47,opt,name=priority,proto3" json:"priority,omitempty"`
	TagList                     []*DougaInfo_Taglist        `protobuf:"bytes,48,rep,name=tagList,proto3" json:"tagList,omitempty"`
	DanmakuCountShow            string                      `protobuf:"bytes,49,opt,name=danmakuCountShow,proto3" json:"danmakuCountShow,omitempty"`
	CreateTime                  string                      `protobuf:"bytes,50,opt,name=createTime,proto3" json:"createTime,omitempty"`
	User                        *DougaInfo_User             `protobuf:"bytes,51,opt,name=user,proto3" json:"user,omitempty"`
	Mkey                        string                      `protobuf:"bytes,52,opt,name=mkey,proto3" json:"mkey,omitempty"`
}

func (x *DougaInfo) Reset() {
	*x = DougaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo) ProtoMessage() {}

func (x *DougaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo.ProtoReflect.Descriptor instead.
func (*DougaInfo) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1}
}

func (x *DougaInfo) GetCurrentVideoID() int32 {
	if x != nil {
		return x.CurrentVideoID
	}
	return 0
}

func (x *DougaInfo) GetPctr() float64 {
	if x != nil {
		return x.Pctr
	}
	return 0
}

func (x *DougaInfo) GetCommentCountRealValue() int32 {
	if x != nil {
		return x.CommentCountRealValue
	}
	return 0
}

func (x *DougaInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *DougaInfo) GetBananaCountShow() string {
	if x != nil {
		return x.BananaCountShow
	}
	return ""
}

func (x *DougaInfo) GetStowCountShow() string {
	if x != nil {
		return x.StowCountShow
	}
	return ""
}

func (x *DougaInfo) GetGiftPeachCountShow() string {
	if x != nil {
		return x.GiftPeachCountShow
	}
	return ""
}

func (x *DougaInfo) GetStowCount() int32 {
	if x != nil {
		return x.StowCount
	}
	return 0
}

func (x *DougaInfo) GetChannel() *DougaInfo_Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *DougaInfo) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *DougaInfo) GetHasHotComment() bool {
	if x != nil {
		return x.HasHotComment
	}
	return false
}

func (x *DougaInfo) GetShareCountShow() string {
	if x != nil {
		return x.ShareCountShow
	}
	return ""
}

func (x *DougaInfo) GetIsDislike() bool {
	if x != nil {
		return x.IsDislike
	}
	return false
}

func (x *DougaInfo) GetShareCount() int32 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *DougaInfo) GetPicShareURL() string {
	if x != nil {
		return x.PicShareURL
	}
	return ""
}

func (x *DougaInfo) GetDanmakuCount() int32 {
	if x != nil {
		return x.DanmakuCount
	}
	return 0
}

func (x *DougaInfo) GetCurrentVideoInfo() *DougaInfo_Currentvideoinfo {
	if x != nil {
		return x.CurrentVideoInfo
	}
	return nil
}

func (x *DougaInfo) GetViewCountShow() string {
	if x != nil {
		return x.ViewCountShow
	}
	return ""
}

func (x *DougaInfo) GetDougaID() string {
	if x != nil {
		return x.DougaID
	}
	return ""
}

func (x *DougaInfo) GetCommentCountTenThousandShow() string {
	if x != nil {
		return x.CommentCountTenThousandShow
	}
	return ""
}

func (x *DougaInfo) GetCoverImgInfo() *DougaInfo_Coverimginfo {
	if x != nil {
		return x.CoverImgInfo
	}
	return nil
}

func (x *DougaInfo) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *DougaInfo) GetCoverURL() string {
	if x != nil {
		return x.CoverURL
	}
	return ""
}

func (x *DougaInfo) GetDisableEdit() bool {
	if x != nil {
		return x.DisableEdit
	}
	return false
}

func (x *DougaInfo) GetCreateTimeMillis() uint64 {
	if x != nil {
		return x.CreateTimeMillis
	}
	return 0
}

func (x *DougaInfo) GetSuperUbb() bool {
	if x != nil {
		return x.SuperUbb
	}
	return false
}

func (x *DougaInfo) GetShareURL() string {
	if x != nil {
		return x.ShareURL
	}
	return ""
}

func (x *DougaInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DougaInfo) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *DougaInfo) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *DougaInfo) GetRecoReason() *DougaInfo_Recoreason {
	if x != nil {
		return x.RecoReason
	}
	return nil
}

func (x *DougaInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DougaInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DougaInfo) GetBelongToSpecifyArubamu() bool {
	if x != nil {
		return x.BelongToSpecifyArubamu
	}
	return false
}

func (x *DougaInfo) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *DougaInfo) GetOriginalDeclare() int32 {
	if x != nil {
		return x.OriginalDeclare
	}
	return 0
}

func (x *DougaInfo) GetVideoList() []*DougaInfo_Videolist {
	if x != nil {
		return x.VideoList
	}
	return nil
}

func (x *DougaInfo) GetIsThrowBanana() bool {
	if x != nil {
		return x.IsThrowBanana
	}
	return false
}

func (x *DougaInfo) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *DougaInfo) GetBananaCount() int32 {
	if x != nil {
		return x.BananaCount
	}
	return 0
}

func (x *DougaInfo) GetLikeCountShow() string {
	if x != nil {
		return x.LikeCountShow
	}
	return ""
}

func (x *DougaInfo) GetCoverCdnUrls() []*DougaInfo_Covercdnurls {
	if x != nil {
		return x.CoverCdnUrls
	}
	return nil
}

func (x *DougaInfo) GetGiftPeachCount() int32 {
	if x != nil {
		return x.GiftPeachCount
	}
	return 0
}

func (x *DougaInfo) GetIsRewardSupportted() bool {
	if x != nil {
		return x.IsRewardSupportted
	}
	return false
}

func (x *DougaInfo) GetCommentCountShow() string {
	if x != nil {
		return x.CommentCountShow
	}
	return ""
}

func (x *DougaInfo) GetDurationMillis() int32 {
	if x != nil {
		return x.DurationMillis
	}
	return 0
}

func (x *DougaInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DougaInfo) GetTagList() []*DougaInfo_Taglist {
	if x != nil {
		return x.TagList
	}
	return nil
}

func (x *DougaInfo) GetDanmakuCountShow() string {
	if x != nil {
		return x.DanmakuCountShow
	}
	return ""
}

func (x *DougaInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DougaInfo) GetUser() *DougaInfo_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *DougaInfo) GetMkey() string {
	if x != nil {
		return x.Mkey
	}
	return ""
}

type DougaInfo_Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentName string `protobuf:"bytes,1,opt,name=parentName,proto3" json:"parentName,omitempty"`
	ParentID   int32  `protobuf:"varint,2,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ID         int32  `protobuf:"varint,4,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DougaInfo_Channel) Reset() {
	*x = DougaInfo_Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Channel) ProtoMessage() {}

func (x *DougaInfo_Channel) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Channel.ProtoReflect.Descriptor instead.
func (*DougaInfo_Channel) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DougaInfo_Channel) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *DougaInfo_Channel) GetParentID() int32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *DougaInfo_Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DougaInfo_Channel) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DougaInfo_Representation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL          string   `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	BackupUrl    []string `protobuf:"bytes,3,rep,name=backupUrl,proto3" json:"backupUrl,omitempty"`
	M3U8Slice    string   `protobuf:"bytes,4,opt,name=m3u8Slice,proto3" json:"m3u8Slice,omitempty"`
	MaxBitrate   int32    `protobuf:"varint,5,opt,name=maxBitrate,proto3" json:"maxBitrate,omitempty"`
	AvgBitrate   int32    `protobuf:"varint,6,opt,name=avgBitrate,proto3" json:"avgBitrate,omitempty"`
	Codecs       string   `protobuf:"bytes,7,opt,name=codecs,proto3" json:"codecs,omitempty"`
	Width        int32    `protobuf:"varint,8,opt,name=width,proto3" json:"width,omitempty"`
	Height       int32    `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	FrameRate    float64  `protobuf:"fixed64,10,opt,name=frameRate,proto3" json:"frameRate,omitempty"`
	Quality      float64  `protobuf:"fixed64,11,opt,name=quality,proto3" json:"quality,omitempty"`
	QualityType  string   `protobuf:"bytes,12,opt,name=qualityType,proto3" json:"qualityType,omitempty"`
	QualityLabel string   `protobuf:"bytes,13,opt,name=qualityLabel,proto3" json:"qualityLabel,omitempty"`
	Comment      string   `protobuf:"bytes,14,opt,name=comment,proto3" json:"comment,omitempty"`
	HdrType      int32    `protobuf:"varint,15,opt,name=hdrType,proto3" json:"hdrType,omitempty"`
}

func (x *DougaInfo_Representation) Reset() {
	*x = DougaInfo_Representation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Representation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Representation) ProtoMessage() {}

func (x *DougaInfo_Representation) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Representation.ProtoReflect.Descriptor instead.
func (*DougaInfo_Representation) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 1}
}

func (x *DougaInfo_Representation) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DougaInfo_Representation) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Representation) GetBackupUrl() []string {
	if x != nil {
		return x.BackupUrl
	}
	return nil
}

func (x *DougaInfo_Representation) GetM3U8Slice() string {
	if x != nil {
		return x.M3U8Slice
	}
	return ""
}

func (x *DougaInfo_Representation) GetMaxBitrate() int32 {
	if x != nil {
		return x.MaxBitrate
	}
	return 0
}

func (x *DougaInfo_Representation) GetAvgBitrate() int32 {
	if x != nil {
		return x.AvgBitrate
	}
	return 0
}

func (x *DougaInfo_Representation) GetCodecs() string {
	if x != nil {
		return x.Codecs
	}
	return ""
}

func (x *DougaInfo_Representation) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DougaInfo_Representation) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DougaInfo_Representation) GetFrameRate() float64 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *DougaInfo_Representation) GetQuality() float64 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *DougaInfo_Representation) GetQualityType() string {
	if x != nil {
		return x.QualityType
	}
	return ""
}

func (x *DougaInfo_Representation) GetQualityLabel() string {
	if x != nil {
		return x.QualityLabel
	}
	return ""
}

func (x *DougaInfo_Representation) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *DougaInfo_Representation) GetHdrType() int32 {
	if x != nil {
		return x.HdrType
	}
	return 0
}

type DougaInfo_Adaptationset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int32                       `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Duration       int32                       `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Representation []*DougaInfo_Representation `protobuf:"bytes,3,rep,name=representation,proto3" json:"representation,omitempty"`
}

func (x *DougaInfo_Adaptationset) Reset() {
	*x = DougaInfo_Adaptationset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Adaptationset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Adaptationset) ProtoMessage() {}

func (x *DougaInfo_Adaptationset) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Adaptationset.ProtoReflect.Descriptor instead.
func (*DougaInfo_Adaptationset) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 2}
}

func (x *DougaInfo_Adaptationset) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DougaInfo_Adaptationset) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DougaInfo_Adaptationset) GetRepresentation() []*DougaInfo_Representation {
	if x != nil {
		return x.Representation
	}
	return nil
}

type DougaInfo_Representation1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL          string   `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	BackupUrl    []string `protobuf:"bytes,3,rep,name=backupUrl,proto3" json:"backupUrl,omitempty"`
	M3U8Slice    string   `protobuf:"bytes,4,opt,name=m3u8Slice,proto3" json:"m3u8Slice,omitempty"`
	MaxBitrate   int32    `protobuf:"varint,5,opt,name=maxBitrate,proto3" json:"maxBitrate,omitempty"`
	AvgBitrate   int32    `protobuf:"varint,6,opt,name=avgBitrate,proto3" json:"avgBitrate,omitempty"`
	Codecs       string   `protobuf:"bytes,7,opt,name=codecs,proto3" json:"codecs,omitempty"`
	Width        int32    `protobuf:"varint,8,opt,name=width,proto3" json:"width,omitempty"`
	Height       int32    `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	FrameRate    float64  `protobuf:"fixed64,10,opt,name=frameRate,proto3" json:"frameRate,omitempty"`
	Quality      float64  `protobuf:"fixed64,11,opt,name=quality,proto3" json:"quality,omitempty"`
	QualityType  string   `protobuf:"bytes,12,opt,name=qualityType,proto3" json:"qualityType,omitempty"`
	QualityLabel string   `protobuf:"bytes,13,opt,name=qualityLabel,proto3" json:"qualityLabel,omitempty"`
	Comment      string   `protobuf:"bytes,14,opt,name=comment,proto3" json:"comment,omitempty"`
	HdrType      int32    `protobuf:"varint,15,opt,name=hdrType,proto3" json:"hdrType,omitempty"`
}

func (x *DougaInfo_Representation1) Reset() {
	*x = DougaInfo_Representation1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Representation1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Representation1) ProtoMessage() {}

func (x *DougaInfo_Representation1) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Representation1.ProtoReflect.Descriptor instead.
func (*DougaInfo_Representation1) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 3}
}

func (x *DougaInfo_Representation1) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DougaInfo_Representation1) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Representation1) GetBackupUrl() []string {
	if x != nil {
		return x.BackupUrl
	}
	return nil
}

func (x *DougaInfo_Representation1) GetM3U8Slice() string {
	if x != nil {
		return x.M3U8Slice
	}
	return ""
}

func (x *DougaInfo_Representation1) GetMaxBitrate() int32 {
	if x != nil {
		return x.MaxBitrate
	}
	return 0
}

func (x *DougaInfo_Representation1) GetAvgBitrate() int32 {
	if x != nil {
		return x.AvgBitrate
	}
	return 0
}

func (x *DougaInfo_Representation1) GetCodecs() string {
	if x != nil {
		return x.Codecs
	}
	return ""
}

func (x *DougaInfo_Representation1) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DougaInfo_Representation1) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DougaInfo_Representation1) GetFrameRate() float64 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *DougaInfo_Representation1) GetQuality() float64 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *DougaInfo_Representation1) GetQualityType() string {
	if x != nil {
		return x.QualityType
	}
	return ""
}

func (x *DougaInfo_Representation1) GetQualityLabel() string {
	if x != nil {
		return x.QualityLabel
	}
	return ""
}

func (x *DougaInfo_Representation1) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *DougaInfo_Representation1) GetHdrType() int32 {
	if x != nil {
		return x.HdrType
	}
	return 0
}

type DougaInfo_Adaptationset1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int32                        `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Duration       int32                        `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Representation []*DougaInfo_Representation1 `protobuf:"bytes,3,rep,name=representation,proto3" json:"representation,omitempty"`
}

func (x *DougaInfo_Adaptationset1) Reset() {
	*x = DougaInfo_Adaptationset1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Adaptationset1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Adaptationset1) ProtoMessage() {}

func (x *DougaInfo_Adaptationset1) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Adaptationset1.ProtoReflect.Descriptor instead.
func (*DougaInfo_Adaptationset1) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 4}
}

func (x *DougaInfo_Adaptationset1) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DougaInfo_Adaptationset1) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DougaInfo_Adaptationset1) GetRepresentation() []*DougaInfo_Representation1 {
	if x != nil {
		return x.Representation
	}
	return nil
}

type DougaInfo_Transcodeinfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QualityType string `protobuf:"bytes,1,opt,name=qualityType,proto3" json:"qualityType,omitempty"`
	SizeInBytes int32  `protobuf:"varint,2,opt,name=sizeInBytes,proto3" json:"sizeInBytes,omitempty"`
	Hdr         bool   `protobuf:"varint,3,opt,name=hdr,proto3" json:"hdr,omitempty"`
}

func (x *DougaInfo_Transcodeinfos) Reset() {
	*x = DougaInfo_Transcodeinfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Transcodeinfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Transcodeinfos) ProtoMessage() {}

func (x *DougaInfo_Transcodeinfos) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Transcodeinfos.ProtoReflect.Descriptor instead.
func (*DougaInfo_Transcodeinfos) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 5}
}

func (x *DougaInfo_Transcodeinfos) GetQualityType() string {
	if x != nil {
		return x.QualityType
	}
	return ""
}

func (x *DougaInfo_Transcodeinfos) GetSizeInBytes() int32 {
	if x != nil {
		return x.SizeInBytes
	}
	return 0
}

func (x *DougaInfo_Transcodeinfos) GetHdr() bool {
	if x != nil {
		return x.Hdr
	}
	return false
}

type DougaInfo_Currentvideoinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority             int32                       `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	ID                   string                      `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	TranscodeInfos       []*DougaInfo_Transcodeinfos `protobuf:"bytes,3,rep,name=transcodeInfos,proto3" json:"transcodeInfos,omitempty"`
	IsKsManifest         bool                        `protobuf:"varint,4,opt,name=isKsManifest,proto3" json:"isKsManifest,omitempty"`
	Title                string                      `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	DanmakuCountShow     string                      `protobuf:"bytes,6,opt,name=danmakuCountShow,proto3" json:"danmakuCountShow,omitempty"`
	UserPlayedSeconds    int32                       `protobuf:"varint,7,opt,name=userPlayedSeconds,proto3" json:"userPlayedSeconds,omitempty"`
	SizeType             int32                       `protobuf:"varint,8,opt,name=sizeType,proto3" json:"sizeType,omitempty"`
	DanmakuGuidePosition int32                       `protobuf:"varint,9,opt,name=danmakuGuidePosition,proto3" json:"danmakuGuidePosition,omitempty"`
	SourceStatus         int32                       `protobuf:"varint,10,opt,name=sourceStatus,proto3" json:"sourceStatus,omitempty"`
	DurationMillis       int32                       `protobuf:"varint,11,opt,name=durationMillis,proto3" json:"durationMillis,omitempty"`
	UploadTime           int64                       `protobuf:"varint,12,opt,name=uploadTime,proto3" json:"uploadTime,omitempty"`
	VisibleType          int32                       `protobuf:"varint,13,opt,name=visibleType,proto3" json:"visibleType,omitempty"`
	DanmakuCount         int32                       `protobuf:"varint,14,opt,name=danmakuCount,proto3" json:"danmakuCount,omitempty"`
	FileName             string                      `protobuf:"bytes,15,opt,name=fileName,proto3" json:"fileName,omitempty"`
}

func (x *DougaInfo_Currentvideoinfo) Reset() {
	*x = DougaInfo_Currentvideoinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Currentvideoinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Currentvideoinfo) ProtoMessage() {}

func (x *DougaInfo_Currentvideoinfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Currentvideoinfo.ProtoReflect.Descriptor instead.
func (*DougaInfo_Currentvideoinfo) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 6}
}

func (x *DougaInfo_Currentvideoinfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DougaInfo_Currentvideoinfo) GetTranscodeInfos() []*DougaInfo_Transcodeinfos {
	if x != nil {
		return x.TranscodeInfos
	}
	return nil
}

func (x *DougaInfo_Currentvideoinfo) GetIsKsManifest() bool {
	if x != nil {
		return x.IsKsManifest
	}
	return false
}

func (x *DougaInfo_Currentvideoinfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DougaInfo_Currentvideoinfo) GetDanmakuCountShow() string {
	if x != nil {
		return x.DanmakuCountShow
	}
	return ""
}

func (x *DougaInfo_Currentvideoinfo) GetUserPlayedSeconds() int32 {
	if x != nil {
		return x.UserPlayedSeconds
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetSizeType() int32 {
	if x != nil {
		return x.SizeType
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetDanmakuGuidePosition() int32 {
	if x != nil {
		return x.DanmakuGuidePosition
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetSourceStatus() int32 {
	if x != nil {
		return x.SourceStatus
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetDurationMillis() int32 {
	if x != nil {
		return x.DurationMillis
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetUploadTime() int64 {
	if x != nil {
		return x.UploadTime
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetVisibleType() int32 {
	if x != nil {
		return x.VisibleType
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetDanmakuCount() int32 {
	if x != nil {
		return x.DanmakuCount
	}
	return 0
}

func (x *DougaInfo_Currentvideoinfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type DougaInfo_Cdnurls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL                            string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	FreeTrafficProductAbbreviation string `protobuf:"bytes,2,opt,name=freeTrafficProductAbbreviation,proto3" json:"freeTrafficProductAbbreviation,omitempty"`
	FreeTrafficCdn                 bool   `protobuf:"varint,3,opt,name=freeTrafficCdn,proto3" json:"freeTrafficCdn,omitempty"`
}

func (x *DougaInfo_Cdnurls) Reset() {
	*x = DougaInfo_Cdnurls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Cdnurls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Cdnurls) ProtoMessage() {}

func (x *DougaInfo_Cdnurls) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Cdnurls.ProtoReflect.Descriptor instead.
func (*DougaInfo_Cdnurls) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 7}
}

func (x *DougaInfo_Cdnurls) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Cdnurls) GetFreeTrafficProductAbbreviation() string {
	if x != nil {
		return x.FreeTrafficProductAbbreviation
	}
	return ""
}

func (x *DougaInfo_Cdnurls) GetFreeTrafficCdn() bool {
	if x != nil {
		return x.FreeTrafficCdn
	}
	return false
}

type DougaInfo_Thumbnailimage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdnUrls  []*DougaInfo_Cdnurls `protobuf:"bytes,1,rep,name=cdnUrls,proto3" json:"cdnUrls,omitempty"`
	Animated int32                `protobuf:"varint,2,opt,name=animated,proto3" json:"animated,omitempty"`
}

func (x *DougaInfo_Thumbnailimage) Reset() {
	*x = DougaInfo_Thumbnailimage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Thumbnailimage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Thumbnailimage) ProtoMessage() {}

func (x *DougaInfo_Thumbnailimage) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Thumbnailimage.ProtoReflect.Descriptor instead.
func (*DougaInfo_Thumbnailimage) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 8}
}

func (x *DougaInfo_Thumbnailimage) GetCdnUrls() []*DougaInfo_Cdnurls {
	if x != nil {
		return x.CdnUrls
	}
	return nil
}

func (x *DougaInfo_Thumbnailimage) GetAnimated() int32 {
	if x != nil {
		return x.Animated
	}
	return 0
}

type DougaInfo_Cdnurls1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL                            string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	FreeTrafficProductAbbreviation string `protobuf:"bytes,2,opt,name=freeTrafficProductAbbreviation,proto3" json:"freeTrafficProductAbbreviation,omitempty"`
	FreeTrafficCdn                 bool   `protobuf:"varint,3,opt,name=freeTrafficCdn,proto3" json:"freeTrafficCdn,omitempty"`
}

func (x *DougaInfo_Cdnurls1) Reset() {
	*x = DougaInfo_Cdnurls1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Cdnurls1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Cdnurls1) ProtoMessage() {}

func (x *DougaInfo_Cdnurls1) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Cdnurls1.ProtoReflect.Descriptor instead.
func (*DougaInfo_Cdnurls1) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 9}
}

func (x *DougaInfo_Cdnurls1) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Cdnurls1) GetFreeTrafficProductAbbreviation() string {
	if x != nil {
		return x.FreeTrafficProductAbbreviation
	}
	return ""
}

func (x *DougaInfo_Cdnurls1) GetFreeTrafficCdn() bool {
	if x != nil {
		return x.FreeTrafficCdn
	}
	return false
}

type DougaInfo_Expandedimage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdnUrls []*DougaInfo_Cdnurls1 `protobuf:"bytes,1,rep,name=cdnUrls,proto3" json:"cdnUrls,omitempty"`
}

func (x *DougaInfo_Expandedimage) Reset() {
	*x = DougaInfo_Expandedimage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Expandedimage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Expandedimage) ProtoMessage() {}

func (x *DougaInfo_Expandedimage) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Expandedimage.ProtoReflect.Descriptor instead.
func (*DougaInfo_Expandedimage) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 10}
}

func (x *DougaInfo_Expandedimage) GetCdnUrls() []*DougaInfo_Cdnurls1 {
	if x != nil {
		return x.CdnUrls
	}
	return nil
}

type DougaInfo_Coverimginfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width                int32                     `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32                     `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Size                 int32                     `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Type                 int32                     `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Animated             bool                      `protobuf:"varint,5,opt,name=animated,proto3" json:"animated,omitempty"`
	ThumbnailImage       *DougaInfo_Thumbnailimage `protobuf:"bytes,6,opt,name=thumbnailImage,proto3" json:"thumbnailImage,omitempty"`
	ExpandedImage        *DougaInfo_Expandedimage  `protobuf:"bytes,7,opt,name=expandedImage,proto3" json:"expandedImage,omitempty"`
	ThumbnailImageCdnURL string                    `protobuf:"bytes,8,opt,name=ThumbnailImageCdnURL,proto3" json:"ThumbnailImageCdnURL,omitempty"`
}

func (x *DougaInfo_Coverimginfo) Reset() {
	*x = DougaInfo_Coverimginfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Coverimginfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Coverimginfo) ProtoMessage() {}

func (x *DougaInfo_Coverimginfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Coverimginfo.ProtoReflect.Descriptor instead.
func (*DougaInfo_Coverimginfo) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 11}
}

func (x *DougaInfo_Coverimginfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DougaInfo_Coverimginfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DougaInfo_Coverimginfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DougaInfo_Coverimginfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DougaInfo_Coverimginfo) GetAnimated() bool {
	if x != nil {
		return x.Animated
	}
	return false
}

func (x *DougaInfo_Coverimginfo) GetThumbnailImage() *DougaInfo_Thumbnailimage {
	if x != nil {
		return x.ThumbnailImage
	}
	return nil
}

func (x *DougaInfo_Coverimginfo) GetExpandedImage() *DougaInfo_Expandedimage {
	if x != nil {
		return x.ExpandedImage
	}
	return nil
}

func (x *DougaInfo_Coverimginfo) GetThumbnailImageCdnURL() string {
	if x != nil {
		return x.ThumbnailImageCdnURL
	}
	return ""
}

type DougaInfo_Recoreason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc       string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	Href       string `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	Tag        string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	LayoutType int32  `protobuf:"varint,4,opt,name=layoutType,proto3" json:"layoutType,omitempty"`
	DescType   int32  `protobuf:"varint,5,opt,name=descType,proto3" json:"descType,omitempty"`
	Type       int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DougaInfo_Recoreason) Reset() {
	*x = DougaInfo_Recoreason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Recoreason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Recoreason) ProtoMessage() {}

func (x *DougaInfo_Recoreason) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Recoreason.ProtoReflect.Descriptor instead.
func (*DougaInfo_Recoreason) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 12}
}

func (x *DougaInfo_Recoreason) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DougaInfo_Recoreason) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *DougaInfo_Recoreason) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DougaInfo_Recoreason) GetLayoutType() int32 {
	if x != nil {
		return x.LayoutType
	}
	return 0
}

func (x *DougaInfo_Recoreason) GetDescType() int32 {
	if x != nil {
		return x.DescType
	}
	return 0
}

func (x *DougaInfo_Recoreason) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DougaInfo_Videolist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority             int32  `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	Title                string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	DanmakuCountShow     string `protobuf:"bytes,3,opt,name=danmakuCountShow,proto3" json:"danmakuCountShow,omitempty"`
	UserPlayedSeconds    int32  `protobuf:"varint,4,opt,name=userPlayedSeconds,proto3" json:"userPlayedSeconds,omitempty"`
	SizeType             int32  `protobuf:"varint,5,opt,name=sizeType,proto3" json:"sizeType,omitempty"`
	DanmakuGuidePosition int32  `protobuf:"varint,6,opt,name=danmakuGuidePosition,proto3" json:"danmakuGuidePosition,omitempty"`
	SourceStatus         int32  `protobuf:"varint,7,opt,name=sourceStatus,proto3" json:"sourceStatus,omitempty"`
	DurationMillis       int32  `protobuf:"varint,8,opt,name=durationMillis,proto3" json:"durationMillis,omitempty"`
	UploadTime           int64  `protobuf:"varint,9,opt,name=uploadTime,proto3" json:"uploadTime,omitempty"`
	VisibleType          int32  `protobuf:"varint,10,opt,name=visibleType,proto3" json:"visibleType,omitempty"`
	DanmakuCount         int32  `protobuf:"varint,11,opt,name=danmakuCount,proto3" json:"danmakuCount,omitempty"`
	FileName             string `protobuf:"bytes,12,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ID                   string `protobuf:"bytes,13,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DougaInfo_Videolist) Reset() {
	*x = DougaInfo_Videolist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Videolist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Videolist) ProtoMessage() {}

func (x *DougaInfo_Videolist) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Videolist.ProtoReflect.Descriptor instead.
func (*DougaInfo_Videolist) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 13}
}

func (x *DougaInfo_Videolist) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DougaInfo_Videolist) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DougaInfo_Videolist) GetDanmakuCountShow() string {
	if x != nil {
		return x.DanmakuCountShow
	}
	return ""
}

func (x *DougaInfo_Videolist) GetUserPlayedSeconds() int32 {
	if x != nil {
		return x.UserPlayedSeconds
	}
	return 0
}

func (x *DougaInfo_Videolist) GetSizeType() int32 {
	if x != nil {
		return x.SizeType
	}
	return 0
}

func (x *DougaInfo_Videolist) GetDanmakuGuidePosition() int32 {
	if x != nil {
		return x.DanmakuGuidePosition
	}
	return 0
}

func (x *DougaInfo_Videolist) GetSourceStatus() int32 {
	if x != nil {
		return x.SourceStatus
	}
	return 0
}

func (x *DougaInfo_Videolist) GetDurationMillis() int32 {
	if x != nil {
		return x.DurationMillis
	}
	return 0
}

func (x *DougaInfo_Videolist) GetUploadTime() int64 {
	if x != nil {
		return x.UploadTime
	}
	return 0
}

func (x *DougaInfo_Videolist) GetVisibleType() int32 {
	if x != nil {
		return x.VisibleType
	}
	return 0
}

func (x *DougaInfo_Videolist) GetDanmakuCount() int32 {
	if x != nil {
		return x.DanmakuCount
	}
	return 0
}

func (x *DougaInfo_Videolist) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DougaInfo_Videolist) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DougaInfo_Covercdnurls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL            string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	FreeTrafficCdn bool   `protobuf:"varint,2,opt,name=freeTrafficCdn,proto3" json:"freeTrafficCdn,omitempty"`
}

func (x *DougaInfo_Covercdnurls) Reset() {
	*x = DougaInfo_Covercdnurls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Covercdnurls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Covercdnurls) ProtoMessage() {}

func (x *DougaInfo_Covercdnurls) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Covercdnurls.ProtoReflect.Descriptor instead.
func (*DougaInfo_Covercdnurls) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 14}
}

func (x *DougaInfo_Covercdnurls) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Covercdnurls) GetFreeTrafficCdn() bool {
	if x != nil {
		return x.FreeTrafficCdn
	}
	return false
}

type DougaInfo_Taglist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ID   string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DougaInfo_Taglist) Reset() {
	*x = DougaInfo_Taglist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Taglist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Taglist) ProtoMessage() {}

func (x *DougaInfo_Taglist) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Taglist.ProtoReflect.Descriptor instead.
func (*DougaInfo_Taglist) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 15}
}

func (x *DougaInfo_Taglist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DougaInfo_Taglist) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DougaInfo_Headcdnurls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL            string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	FreeTrafficCdn bool   `protobuf:"varint,2,opt,name=freeTrafficCdn,proto3" json:"freeTrafficCdn,omitempty"`
}

func (x *DougaInfo_Headcdnurls) Reset() {
	*x = DougaInfo_Headcdnurls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Headcdnurls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Headcdnurls) ProtoMessage() {}

func (x *DougaInfo_Headcdnurls) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Headcdnurls.ProtoReflect.Descriptor instead.
func (*DougaInfo_Headcdnurls) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 16}
}

func (x *DougaInfo_Headcdnurls) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Headcdnurls) GetFreeTrafficCdn() bool {
	if x != nil {
		return x.FreeTrafficCdn
	}
	return false
}

type DougaInfo_Socialmedal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DougaInfo_Socialmedal) Reset() {
	*x = DougaInfo_Socialmedal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Socialmedal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Socialmedal) ProtoMessage() {}

func (x *DougaInfo_Socialmedal) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Socialmedal.ProtoReflect.Descriptor instead.
func (*DougaInfo_Socialmedal) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 17}
}

type DougaInfo_Cdnurls2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL                            string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	FreeTrafficProductAbbreviation string `protobuf:"bytes,2,opt,name=freeTrafficProductAbbreviation,proto3" json:"freeTrafficProductAbbreviation,omitempty"`
	FreeTrafficCdn                 bool   `protobuf:"varint,3,opt,name=freeTrafficCdn,proto3" json:"freeTrafficCdn,omitempty"`
}

func (x *DougaInfo_Cdnurls2) Reset() {
	*x = DougaInfo_Cdnurls2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Cdnurls2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Cdnurls2) ProtoMessage() {}

func (x *DougaInfo_Cdnurls2) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Cdnurls2.ProtoReflect.Descriptor instead.
func (*DougaInfo_Cdnurls2) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 18}
}

func (x *DougaInfo_Cdnurls2) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Cdnurls2) GetFreeTrafficProductAbbreviation() string {
	if x != nil {
		return x.FreeTrafficProductAbbreviation
	}
	return ""
}

func (x *DougaInfo_Cdnurls2) GetFreeTrafficCdn() bool {
	if x != nil {
		return x.FreeTrafficCdn
	}
	return false
}

type DougaInfo_Thumbnailimage1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdnUrls  []*DougaInfo_Cdnurls2 `protobuf:"bytes,1,rep,name=cdnUrls,proto3" json:"cdnUrls,omitempty"`
	Animated int32                 `protobuf:"varint,2,opt,name=animated,proto3" json:"animated,omitempty"`
}

func (x *DougaInfo_Thumbnailimage1) Reset() {
	*x = DougaInfo_Thumbnailimage1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Thumbnailimage1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Thumbnailimage1) ProtoMessage() {}

func (x *DougaInfo_Thumbnailimage1) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Thumbnailimage1.ProtoReflect.Descriptor instead.
func (*DougaInfo_Thumbnailimage1) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 19}
}

func (x *DougaInfo_Thumbnailimage1) GetCdnUrls() []*DougaInfo_Cdnurls2 {
	if x != nil {
		return x.CdnUrls
	}
	return nil
}

func (x *DougaInfo_Thumbnailimage1) GetAnimated() int32 {
	if x != nil {
		return x.Animated
	}
	return 0
}

type DougaInfo_Cdnurls3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL                            string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	FreeTrafficProductAbbreviation string `protobuf:"bytes,2,opt,name=freeTrafficProductAbbreviation,proto3" json:"freeTrafficProductAbbreviation,omitempty"`
	FreeTrafficCdn                 bool   `protobuf:"varint,3,opt,name=freeTrafficCdn,proto3" json:"freeTrafficCdn,omitempty"`
}

func (x *DougaInfo_Cdnurls3) Reset() {
	*x = DougaInfo_Cdnurls3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Cdnurls3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Cdnurls3) ProtoMessage() {}

func (x *DougaInfo_Cdnurls3) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Cdnurls3.ProtoReflect.Descriptor instead.
func (*DougaInfo_Cdnurls3) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 20}
}

func (x *DougaInfo_Cdnurls3) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DougaInfo_Cdnurls3) GetFreeTrafficProductAbbreviation() string {
	if x != nil {
		return x.FreeTrafficProductAbbreviation
	}
	return ""
}

func (x *DougaInfo_Cdnurls3) GetFreeTrafficCdn() bool {
	if x != nil {
		return x.FreeTrafficCdn
	}
	return false
}

type DougaInfo_Expandedimage1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdnUrls []*DougaInfo_Cdnurls3 `protobuf:"bytes,1,rep,name=cdnUrls,proto3" json:"cdnUrls,omitempty"`
}

func (x *DougaInfo_Expandedimage1) Reset() {
	*x = DougaInfo_Expandedimage1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Expandedimage1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Expandedimage1) ProtoMessage() {}

func (x *DougaInfo_Expandedimage1) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Expandedimage1.ProtoReflect.Descriptor instead.
func (*DougaInfo_Expandedimage1) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 21}
}

func (x *DougaInfo_Expandedimage1) GetCdnUrls() []*DougaInfo_Cdnurls3 {
	if x != nil {
		return x.CdnUrls
	}
	return nil
}

type DougaInfo_Userheadimginfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width                int32                      `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32                      `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Size                 int32                      `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Type                 int32                      `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Animated             bool                       `protobuf:"varint,5,opt,name=animated,proto3" json:"animated,omitempty"`
	ThumbnailImage       *DougaInfo_Thumbnailimage1 `protobuf:"bytes,6,opt,name=thumbnailImage,proto3" json:"thumbnailImage,omitempty"`
	ExpandedImage        *DougaInfo_Expandedimage1  `protobuf:"bytes,7,opt,name=expandedImage,proto3" json:"expandedImage,omitempty"`
	ThumbnailImageCdnURL string                     `protobuf:"bytes,8,opt,name=ThumbnailImageCdnURL,proto3" json:"ThumbnailImageCdnURL,omitempty"`
}

func (x *DougaInfo_Userheadimginfo) Reset() {
	*x = DougaInfo_Userheadimginfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_Userheadimginfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_Userheadimginfo) ProtoMessage() {}

func (x *DougaInfo_Userheadimginfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_Userheadimginfo.ProtoReflect.Descriptor instead.
func (*DougaInfo_Userheadimginfo) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 22}
}

func (x *DougaInfo_Userheadimginfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DougaInfo_Userheadimginfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DougaInfo_Userheadimginfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DougaInfo_Userheadimginfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DougaInfo_Userheadimginfo) GetAnimated() bool {
	if x != nil {
		return x.Animated
	}
	return false
}

func (x *DougaInfo_Userheadimginfo) GetThumbnailImage() *DougaInfo_Thumbnailimage1 {
	if x != nil {
		return x.ThumbnailImage
	}
	return nil
}

func (x *DougaInfo_Userheadimginfo) GetExpandedImage() *DougaInfo_Expandedimage1 {
	if x != nil {
		return x.ExpandedImage
	}
	return nil
}

func (x *DougaInfo_Userheadimginfo) GetThumbnailImageCdnURL() string {
	if x != nil {
		return x.ThumbnailImageCdnURL
	}
	return ""
}

type DougaInfo_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action               int32                      `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Href                 string                     `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	HeadCdnUrls          []*DougaInfo_Headcdnurls   `protobuf:"bytes,3,rep,name=headCdnUrls,proto3" json:"headCdnUrls,omitempty"`
	IsJoinUpCollege      bool                       `protobuf:"varint,4,opt,name=isJoinUpCollege,proto3" json:"isJoinUpCollege,omitempty"`
	FollowingCountValue  int32                      `protobuf:"varint,5,opt,name=followingCountValue,proto3" json:"followingCountValue,omitempty"`
	ContributeCountValue int32                      `protobuf:"varint,6,opt,name=contributeCountValue,proto3" json:"contributeCountValue,omitempty"`
	FanCount             string                     `protobuf:"bytes,7,opt,name=fanCount,proto3" json:"fanCount,omitempty"`
	SocialMedal          *DougaInfo_Socialmedal     `protobuf:"bytes,8,opt,name=socialMedal,proto3" json:"socialMedal,omitempty"`
	AvatarImage          string                     `protobuf:"bytes,9,opt,name=avatarImage,proto3" json:"avatarImage,omitempty"`
	UserHeadImgInfo      *DougaInfo_Userheadimginfo `protobuf:"bytes,10,opt,name=userHeadImgInfo,proto3" json:"userHeadImgInfo,omitempty"`
	IsFollowed           bool                       `protobuf:"varint,11,opt,name=isFollowed,proto3" json:"isFollowed,omitempty"`
	IsFollowing          bool                       `protobuf:"varint,12,opt,name=isFollowing,proto3" json:"isFollowing,omitempty"`
	AvatarFrame          int32                      `protobuf:"varint,13,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`
	ContributeCount      string                     `protobuf:"bytes,14,opt,name=contributeCount,proto3" json:"contributeCount,omitempty"`
	AvatarFramePcImg     string                     `protobuf:"bytes,15,opt,name=avatarFramePcImg,proto3" json:"avatarFramePcImg,omitempty"`
	AvatarFrameMobileImg string                     `protobuf:"bytes,16,opt,name=avatarFrameMobileImg,proto3" json:"avatarFrameMobileImg,omitempty"`
	NameStyle            string                     `protobuf:"bytes,17,opt,name=nameStyle,proto3" json:"nameStyle,omitempty"`
	SexTrend             int32                      `protobuf:"varint,18,opt,name=sexTrend,proto3" json:"sexTrend,omitempty"`
	VerifiedTypes        []int32                    `protobuf:"varint,19,rep,packed,name=verifiedTypes,proto3" json:"verifiedTypes,omitempty"`
	HeadURL              string                     `protobuf:"bytes,20,opt,name=HeadURL,proto3" json:"HeadURL,omitempty"`
	FanCountValue        int32                      `protobuf:"varint,21,opt,name=fanCountValue,proto3" json:"fanCountValue,omitempty"`
	FollowingStatus      int32                      `protobuf:"varint,22,opt,name=followingStatus,proto3" json:"followingStatus,omitempty"`
	NameColor            int32                      `protobuf:"varint,23,opt,name=nameColor,proto3" json:"nameColor,omitempty"`
	FollowingCount       string                     `protobuf:"bytes,24,opt,name=followingCount,proto3" json:"followingCount,omitempty"`
	Gender               int32                      `protobuf:"varint,25,opt,name=gender,proto3" json:"gender,omitempty"`
	Name                 string                     `protobuf:"bytes,26,opt,name=name,proto3" json:"name,omitempty"`
	Signature            string                     `protobuf:"bytes,27,opt,name=signature,proto3" json:"signature,omitempty"`
	ID                   string                     `protobuf:"bytes,28,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DougaInfo_User) Reset() {
	*x = DougaInfo_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_protoLib_full_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DougaInfo_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DougaInfo_User) ProtoMessage() {}

func (x *DougaInfo_User) ProtoReflect() protoreflect.Message {
	mi := &file_server_protoLib_full_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DougaInfo_User.ProtoReflect.Descriptor instead.
func (*DougaInfo_User) Descriptor() ([]byte, []int) {
	return file_server_protoLib_full_proto_rawDescGZIP(), []int{1, 23}
}

func (x *DougaInfo_User) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *DougaInfo_User) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *DougaInfo_User) GetHeadCdnUrls() []*DougaInfo_Headcdnurls {
	if x != nil {
		return x.HeadCdnUrls
	}
	return nil
}

func (x *DougaInfo_User) GetIsJoinUpCollege() bool {
	if x != nil {
		return x.IsJoinUpCollege
	}
	return false
}

func (x *DougaInfo_User) GetFollowingCountValue() int32 {
	if x != nil {
		return x.FollowingCountValue
	}
	return 0
}

func (x *DougaInfo_User) GetContributeCountValue() int32 {
	if x != nil {
		return x.ContributeCountValue
	}
	return 0
}

func (x *DougaInfo_User) GetFanCount() string {
	if x != nil {
		return x.FanCount
	}
	return ""
}

func (x *DougaInfo_User) GetSocialMedal() *DougaInfo_Socialmedal {
	if x != nil {
		return x.SocialMedal
	}
	return nil
}

func (x *DougaInfo_User) GetAvatarImage() string {
	if x != nil {
		return x.AvatarImage
	}
	return ""
}

func (x *DougaInfo_User) GetUserHeadImgInfo() *DougaInfo_Userheadimginfo {
	if x != nil {
		return x.UserHeadImgInfo
	}
	return nil
}

func (x *DougaInfo_User) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

func (x *DougaInfo_User) GetIsFollowing() bool {
	if x != nil {
		return x.IsFollowing
	}
	return false
}

func (x *DougaInfo_User) GetAvatarFrame() int32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *DougaInfo_User) GetContributeCount() string {
	if x != nil {
		return x.ContributeCount
	}
	return ""
}

func (x *DougaInfo_User) GetAvatarFramePcImg() string {
	if x != nil {
		return x.AvatarFramePcImg
	}
	return ""
}

func (x *DougaInfo_User) GetAvatarFrameMobileImg() string {
	if x != nil {
		return x.AvatarFrameMobileImg
	}
	return ""
}

func (x *DougaInfo_User) GetNameStyle() string {
	if x != nil {
		return x.NameStyle
	}
	return ""
}

func (x *DougaInfo_User) GetSexTrend() int32 {
	if x != nil {
		return x.SexTrend
	}
	return 0
}

func (x *DougaInfo_User) GetVerifiedTypes() []int32 {
	if x != nil {
		return x.VerifiedTypes
	}
	return nil
}

func (x *DougaInfo_User) GetHeadURL() string {
	if x != nil {
		return x.HeadURL
	}
	return ""
}

func (x *DougaInfo_User) GetFanCountValue() int32 {
	if x != nil {
		return x.FanCountValue
	}
	return 0
}

func (x *DougaInfo_User) GetFollowingStatus() int32 {
	if x != nil {
		return x.FollowingStatus
	}
	return 0
}

func (x *DougaInfo_User) GetNameColor() int32 {
	if x != nil {
		return x.NameColor
	}
	return 0
}

func (x *DougaInfo_User) GetFollowingCount() string {
	if x != nil {
		return x.FollowingCount
	}
	return ""
}

func (x *DougaInfo_User) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *DougaInfo_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DougaInfo_User) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DougaInfo_User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

var File_server_protoLib_full_proto protoreflect.FileDescriptor

var file_server_protoLib_full_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x69,
	0x62, 0x2f, 0x66, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x04,
	0x41, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x63, 0x69, 0x64, 0x22, 0xe7, 0x38, 0x0a, 0x09, 0x44, 0x6f, 0x75,
	0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x63, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x63,
	0x74, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6e,
	0x61, 0x6e, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x74, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x69, 0x66, 0x74, 0x50, 0x65, 0x61, 0x63, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x67, 0x69, 0x66, 0x74, 0x50, 0x65, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x68, 0x61, 0x73, 0x48, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x69, 0x63, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x69, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61,
	0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47,
	0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x44, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65, 0x6e, 0x54, 0x68, 0x6f, 0x75, 0x73, 0x61,
	0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65, 0x6e, 0x54, 0x68, 0x6f,
	0x75, 0x73, 0x61, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x49, 0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x69, 0x6d, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x65, 0x72, 0x55, 0x62, 0x62,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x75, 0x70, 0x65, 0x72, 0x55, 0x62, 0x62,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x62,
	0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x41, 0x72,
	0x75, 0x62, 0x61, 0x6d, 0x75, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x62, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x41, 0x72, 0x75, 0x62,
	0x61, 0x6d, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65,
	0x63, 0x6c, 0x61, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x54,
	0x68, 0x72, 0x6f, 0x77, 0x42, 0x61, 0x6e, 0x61, 0x6e, 0x61, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x77, 0x42, 0x61, 0x6e, 0x61, 0x6e, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x61, 0x6e, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x64,
	0x6e, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44, 0x6f,
	0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x64, 0x6e,
	0x75, 0x72, 0x6c, 0x73, 0x52, 0x0c, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x64, 0x6e, 0x55, 0x72,
	0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x69, 0x66, 0x74, 0x50, 0x65, 0x61, 0x63, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x69, 0x66, 0x74,
	0x50, 0x65, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x74, 0x65, 0x64,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x61,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x30, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44, 0x6f,
	0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x07, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x61, 0x6e, 0x6d,
	0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x31, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6b, 0x65,
	0x79, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6b, 0x65, 0x79, 0x1a, 0x69, 0x0a,
	0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x1a, 0xa6, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x33, 0x75, 0x38, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x33, 0x75, 0x38, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x61, 0x78, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x67,
	0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x76, 0x67, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64,
	0x65, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x63,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x64, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x64, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x1a, 0x7e, 0x0a, 0x0d, 0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xa7, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x33, 0x75, 0x38, 0x53, 0x6c, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x33, 0x75, 0x38, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x67, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x80, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x31, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x52, 0x0e,
	0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x66,
	0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x68, 0x64, 0x72, 0x1a, 0xb3, 0x04, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73,
	0x4b, 0x73, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x4b, 0x73, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x12, 0x2c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x61,
	0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b,
	0x75, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x8b, 0x01, 0x0a,
	0x07, 0x43, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x46, 0x0a, 0x1e, 0x66, 0x72,
	0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x43, 0x64, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e, 0x1a, 0x5a, 0x0a, 0x0e, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x07,
	0x63, 0x64, 0x6e, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x64, 0x6e, 0x75, 0x72, 0x6c,
	0x73, 0x52, 0x07, 0x63, 0x64, 0x6e, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x8c, 0x01, 0x0a, 0x08, 0x43, 0x64, 0x6e, 0x75, 0x72,
	0x6c, 0x73, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x46, 0x0a, 0x1e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x62, 0x62, 0x72, 0x65,
	0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x66,
	0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x43, 0x64, 0x6e, 0x1a, 0x3e, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65,
	0x64, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x64, 0x6e, 0x55, 0x72, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x31, 0x52, 0x07, 0x63, 0x64,
	0x6e, 0x55, 0x72, 0x6c, 0x73, 0x1a, 0xb7, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x69,
	0x6d, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x65,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x65, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x64, 0x6e,
	0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x54, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x64, 0x6e, 0x55, 0x52, 0x4c, 0x1a,
	0x96, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0xc5, 0x03, 0x0a, 0x09, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x61, 0x6e, 0x6d,
	0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x61,
	0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x1a, 0x48, 0x0a, 0x0c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x52, 0x4c, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x43, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e, 0x1a, 0x2d, 0x0a, 0x07, 0x54, 0x61,
	0x67, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x1a, 0x47, 0x0a, 0x0b, 0x48, 0x65, 0x61,
	0x64, 0x63, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72,
	0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43,
	0x64, 0x6e, 0x1a, 0x0d, 0x0a, 0x0b, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x6d, 0x65, 0x64, 0x61,
	0x6c, 0x1a, 0x8c, 0x01, 0x0a, 0x08, 0x43, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x32, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x12, 0x46, 0x0a, 0x1e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x62, 0x62, 0x72,
	0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e,
	0x1a, 0x5c, 0x0a, 0x0f, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x31, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x64, 0x6e, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x43, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x32, 0x52, 0x07, 0x63, 0x64, 0x6e, 0x55, 0x72,
	0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x8c,
	0x01, 0x0a, 0x08, 0x43, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x46, 0x0a,
	0x1e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66,
	0x72, 0x65, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x64, 0x6e, 0x1a, 0x3f, 0x0a,
	0x0e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x31, 0x12,
	0x2d, 0x0a, 0x07, 0x63, 0x64, 0x6e, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x64, 0x6e,
	0x75, 0x72, 0x6c, 0x73, 0x33, 0x52, 0x07, 0x63, 0x64, 0x6e, 0x55, 0x72, 0x6c, 0x73, 0x1a, 0xbc,
	0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x44,
	0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x31, 0x52, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x61,
	0x6e, 0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x61,
	0x6e, 0x64, 0x65, 0x64, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x31, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x61,
	0x6e, 0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x64, 0x6e, 0x55, 0x52,
	0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x64, 0x6e, 0x55, 0x52, 0x4c, 0x1a, 0x92, 0x08,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72,
	0x65, 0x66, 0x12, 0x38, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x43, 0x64, 0x6e, 0x55, 0x72, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x63, 0x64, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x52,
	0x0b, 0x68, 0x65, 0x61, 0x64, 0x43, 0x64, 0x6e, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x55, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x55, 0x70, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x6d, 0x65, 0x64, 0x61, 0x6c, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x64,
	0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64,
	0x49, 0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6d, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x63, 0x49, 0x6d, 0x67, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50,
	0x63, 0x49, 0x6d, 0x67, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x78, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x78, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x55, 0x52, 0x4c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x55,
	0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x61, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x32, 0x28, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x05, 0x2e, 0x41, 0x63, 0x69, 0x64,
	0x1a, 0x0a, 0x2e, 0x44, 0x6f, 0x75, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2f, 0x3b, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_server_protoLib_full_proto_rawDescOnce sync.Once
	file_server_protoLib_full_proto_rawDescData = file_server_protoLib_full_proto_rawDesc
)

func file_server_protoLib_full_proto_rawDescGZIP() []byte {
	file_server_protoLib_full_proto_rawDescOnce.Do(func() {
		file_server_protoLib_full_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_protoLib_full_proto_rawDescData)
	})
	return file_server_protoLib_full_proto_rawDescData
}

var file_server_protoLib_full_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_server_protoLib_full_proto_goTypes = []interface{}{
	(*Acid)(nil),                       // 0: Acid
	(*DougaInfo)(nil),                  // 1: DougaInfo
	(*DougaInfo_Channel)(nil),          // 2: DougaInfo.Channel
	(*DougaInfo_Representation)(nil),   // 3: DougaInfo.Representation
	(*DougaInfo_Adaptationset)(nil),    // 4: DougaInfo.Adaptationset
	(*DougaInfo_Representation1)(nil),  // 5: DougaInfo.Representation1
	(*DougaInfo_Adaptationset1)(nil),   // 6: DougaInfo.Adaptationset1
	(*DougaInfo_Transcodeinfos)(nil),   // 7: DougaInfo.Transcodeinfos
	(*DougaInfo_Currentvideoinfo)(nil), // 8: DougaInfo.Currentvideoinfo
	(*DougaInfo_Cdnurls)(nil),          // 9: DougaInfo.Cdnurls
	(*DougaInfo_Thumbnailimage)(nil),   // 10: DougaInfo.Thumbnailimage
	(*DougaInfo_Cdnurls1)(nil),         // 11: DougaInfo.Cdnurls1
	(*DougaInfo_Expandedimage)(nil),    // 12: DougaInfo.Expandedimage
	(*DougaInfo_Coverimginfo)(nil),     // 13: DougaInfo.Coverimginfo
	(*DougaInfo_Recoreason)(nil),       // 14: DougaInfo.Recoreason
	(*DougaInfo_Videolist)(nil),        // 15: DougaInfo.Videolist
	(*DougaInfo_Covercdnurls)(nil),     // 16: DougaInfo.Covercdnurls
	(*DougaInfo_Taglist)(nil),          // 17: DougaInfo.Taglist
	(*DougaInfo_Headcdnurls)(nil),      // 18: DougaInfo.Headcdnurls
	(*DougaInfo_Socialmedal)(nil),      // 19: DougaInfo.Socialmedal
	(*DougaInfo_Cdnurls2)(nil),         // 20: DougaInfo.Cdnurls2
	(*DougaInfo_Thumbnailimage1)(nil),  // 21: DougaInfo.Thumbnailimage1
	(*DougaInfo_Cdnurls3)(nil),         // 22: DougaInfo.Cdnurls3
	(*DougaInfo_Expandedimage1)(nil),   // 23: DougaInfo.Expandedimage1
	(*DougaInfo_Userheadimginfo)(nil),  // 24: DougaInfo.Userheadimginfo
	(*DougaInfo_User)(nil),             // 25: DougaInfo.User
}
var file_server_protoLib_full_proto_depIdxs = []int32{
	2,  // 0: DougaInfo.channel:type_name -> DougaInfo.Channel
	8,  // 1: DougaInfo.currentVideoInfo:type_name -> DougaInfo.Currentvideoinfo
	13, // 2: DougaInfo.coverImgInfo:type_name -> DougaInfo.Coverimginfo
	14, // 3: DougaInfo.recoReason:type_name -> DougaInfo.Recoreason
	15, // 4: DougaInfo.videoList:type_name -> DougaInfo.Videolist
	16, // 5: DougaInfo.coverCdnUrls:type_name -> DougaInfo.Covercdnurls
	17, // 6: DougaInfo.tagList:type_name -> DougaInfo.Taglist
	25, // 7: DougaInfo.user:type_name -> DougaInfo.User
	3,  // 8: DougaInfo.Adaptationset.representation:type_name -> DougaInfo.Representation
	5,  // 9: DougaInfo.Adaptationset1.representation:type_name -> DougaInfo.Representation1
	7,  // 10: DougaInfo.Currentvideoinfo.transcodeInfos:type_name -> DougaInfo.Transcodeinfos
	9,  // 11: DougaInfo.Thumbnailimage.cdnUrls:type_name -> DougaInfo.Cdnurls
	11, // 12: DougaInfo.Expandedimage.cdnUrls:type_name -> DougaInfo.Cdnurls1
	10, // 13: DougaInfo.Coverimginfo.thumbnailImage:type_name -> DougaInfo.Thumbnailimage
	12, // 14: DougaInfo.Coverimginfo.expandedImage:type_name -> DougaInfo.Expandedimage
	20, // 15: DougaInfo.Thumbnailimage1.cdnUrls:type_name -> DougaInfo.Cdnurls2
	22, // 16: DougaInfo.Expandedimage1.cdnUrls:type_name -> DougaInfo.Cdnurls3
	21, // 17: DougaInfo.Userheadimginfo.thumbnailImage:type_name -> DougaInfo.Thumbnailimage1
	23, // 18: DougaInfo.Userheadimginfo.expandedImage:type_name -> DougaInfo.Expandedimage1
	18, // 19: DougaInfo.User.headCdnUrls:type_name -> DougaInfo.Headcdnurls
	19, // 20: DougaInfo.User.socialMedal:type_name -> DougaInfo.Socialmedal
	24, // 21: DougaInfo.User.userHeadImgInfo:type_name -> DougaInfo.Userheadimginfo
	0,  // 22: Get.GetDougaInfo:input_type -> Acid
	1,  // 23: Get.GetDougaInfo:output_type -> DougaInfo
	23, // [23:24] is the sub-list for method output_type
	22, // [22:23] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_server_protoLib_full_proto_init() }
func file_server_protoLib_full_proto_init() {
	if File_server_protoLib_full_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_protoLib_full_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Representation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Adaptationset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Representation1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Adaptationset1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Transcodeinfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Currentvideoinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Cdnurls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Thumbnailimage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Cdnurls1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Expandedimage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Coverimginfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Recoreason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Videolist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Covercdnurls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Taglist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Headcdnurls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Socialmedal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Cdnurls2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Thumbnailimage1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Cdnurls3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Expandedimage1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_Userheadimginfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_protoLib_full_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DougaInfo_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_protoLib_full_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_protoLib_full_proto_goTypes,
		DependencyIndexes: file_server_protoLib_full_proto_depIdxs,
		MessageInfos:      file_server_protoLib_full_proto_msgTypes,
	}.Build()
	File_server_protoLib_full_proto = out.File
	file_server_protoLib_full_proto_rawDesc = nil
	file_server_protoLib_full_proto_goTypes = nil
	file_server_protoLib_full_proto_depIdxs = nil
}
